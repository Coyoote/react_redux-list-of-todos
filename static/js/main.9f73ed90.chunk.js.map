{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","utils/filter.ts","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","dispatch","isCurrentTodo","id","className","completed","classnames","title","onClick","currTodoActions","TodoList","length","map","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","filterActions","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","hasError","setHasError","fetchUser","a","foundUser","useEffect","href","email","name","App","fetchTodos","todosFromServer","todosActions","filteredTodos","lowerQuery","toLowerCase","includes","filterTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f73ed90.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return { ...action.payload };\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype FilterAll = {\n  type: 'filter/ALL',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype FilterActive = {\n  type: 'filter/ACTIVE',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype FilterCompleted = {\n  type: 'filter/COMPLETED',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype FilterQuery = {\n  type: 'filter/SET_QUERY',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype Actions = FilterAll | FilterActive | FilterCompleted | FilterQuery;\n\nconst filterAll = (status: Status, query: string): FilterAll => ({\n  type: 'filter/ALL',\n  payload: {\n    status,\n    query,\n  },\n});\n\nconst filterActive = (status: Status, query: string): FilterActive => ({\n  type: 'filter/ACTIVE',\n  payload: {\n    status,\n    query,\n  },\n});\n\nconst filterCompleted = (status: Status, query: string): FilterCompleted => ({\n  type: 'filter/COMPLETED',\n  payload: {\n    status,\n    query,\n  },\n});\n\nconst filterQuery = (status: Status, query: string): FilterQuery => ({\n  type: 'filter/SET_QUERY',\n  payload: {\n    status,\n    query,\n  },\n});\n\nexport const actions = {\n  filterAll,\n  filterActive,\n  filterCompleted,\n  filterQuery,\n};\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state: State = initialState, action: Actions) => {\n  switch (action.type) {\n    case 'filter/ALL':\n      return { query: action.payload.query, status: action.payload.status };\n    case 'filter/ACTIVE':\n      return { query: action.payload.query, status: action.payload.status };\n    case 'filter/COMPLETED':\n      return { query: action.payload.query, status: action.payload.status };\n    case 'filter/SET_QUERY':\n      return { query: action.payload.query, status: action.payload.status };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = { type: 'todos/ADD', payload: Todo[] };\n\ntype Action = AddAction;\n\nconst addTodos = (todos: Todo[]): AddAction => (\n  { type: 'todos/ADD', payload: todos });\n\nexport const actions = { addTodos };\n\ntype State = Todo[] | [];\n\nconst todosReducer = (state: State = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const setTodo = () => dispatch(\n    currTodoActions.setTodo(todo),\n  );\n\n  const isCurrentTodo = currentTodo?.id === todo.id;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed\n          && (\n            <span\n              className=\"icon\"\n              data-cy=\"iconCompleted\"\n            >\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classnames({\n          'has-text-success': todo.completed,\n          'has-text-danger': !todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={setTodo}\n        >\n          <span className=\"icon\">\n            <i className={classnames('far', {\n              'fa-eye': !isCurrentTodo,\n              'fa-eye-slash': isCurrentTodo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {!todos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n  const { status, query } = filter;\n\n  const setQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    dispatch(filterActions.filterQuery(status, value));\n  };\n\n  const clearQuery = () => {\n    dispatch(filterActions.filterAll(status, ''));\n  };\n\n  const setStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case 'all':\n        dispatch(filterActions.filterAll(value, query));\n        break;\n      case 'active':\n        dispatch(filterActions.filterActive(value, query));\n        break;\n      case 'completed':\n        dispatch(filterActions.filterCompleted(value, query));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={setStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={setQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {/* eslint-disable jsx-a11y/control-has-associated-label */}\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const removeTodo = () => dispatch(currTodoActions.removeTodo());\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = currentTodo!;\n\n  const fetchUser = async () => {\n    try {\n      setIsLoading(true);\n\n      const foundUser = await getUser(userId);\n\n      setUser(foundUser);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <div\n      className={classnames('modal', {\n        'is-active': currentTodo,\n      })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {hasError\n                  ? (\n                    'Error'\n                  )\n                  : `Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={removeTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p\n                className=\"block\"\n                data-cy=\"modal-title\"\n              >\n                {hasError\n                  ? (\n                    <p className=\"notification is-warning\">\n                      Failed to load user from server\n                    </p>\n                  )\n                  : title}\n\n              </p>\n\n              {!hasError && (\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n                  {' by '}\n                  <a href={`mailto:${user?.email}`}>{user?.name}</a>\n                </p>\n              )}\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { filterTodos } from './utils/filter';\n\nexport const App: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const fetchTodos = async () => {\n    try {\n      setIsLoading(true);\n\n      const todosFromServer = await getTodos();\n\n      dispatch(todosActions.addTodos(todosFromServer));\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const filteredTodos = filterTodos(todos, filter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={filteredTodos} />}\n\n              {hasError && (\n                <p className=\"notification is-warning\">\n                  Failed to load todos from server\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos = (todos: Todo[], filter: Filter) => {\n  let filteredTodos = todos;\n  const { query, status } = filter;\n\n  if (query) {\n    filteredTodos = filteredTodos.filter((todo) => {\n      const lowerQuery = query.toLowerCase();\n      const lowerTitle = todo.title.toLowerCase();\n\n      return lowerTitle.includes(lowerQuery);\n    });\n  }\n\n  if (status) {\n    filteredTodos = filteredTodos.filter((todo) => {\n      switch (status) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n        case 'all':\n          return todo;\n      }\n    });\n  }\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}